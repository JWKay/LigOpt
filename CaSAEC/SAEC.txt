#   R Program for SAEC:
# Automatic determination of 
# Equilibrium dissociation constant

saec<- function(cacal, cabuf, capar) {


eps<- 10^(-6)
Ctot<- cacal[,1]
Crelt<- cacal[,2]
Cpot <- cacal[,3]

Btot<- cabuf[,1]
Brelt<- cabuf[,2]
Bpot <- cabuf[,3]

finpot <- capar[3,2]
tottime <- capar[4,2]
fbr <- capar[1,2]
nlc <- capar [2,2]

ncal <- nrow(cacal)
nbuf <- nrow(cabuf)
p0 <- 3 - log10(Ctot[1])

dpot <- finpot - Cpot[1]
dtim <- tottime - Crelt[1]
pot1 <- Cpot[1]

temp1 <- p0 + log10(Ctot) - 3
temp2 <- Cpot -pot1 - Crelt*dpot/dtim

calrelpot<-temp2
pca<- - (log10(Ctot) -3)

c1 <- sum(temp1*temp2)
c2 <- sum(temp1*temp1)

slope <- c1/c2
inter <- slope*p0


relpot <- Bpot -pot1 - Brelt*dpot/dtim

px0<- 10^((relpot[1] -inter)/slope)
mgtot<- Btot[1]
pkapp<-   - log10( ( px0*(0.001*(nlc-mgtot)+px0))/(0.001*mgtot - px0))


kapp <- 10^(-pkapp)

temp3 <- kapp + 0.001*(nlc - Btot)
temp4 <- sqrt(temp3*temp3 +0.004*kapp*Btot)
temp5 <- (temp4- temp3)/2.0
temp6 <- 10^(relpot /slope)
cinit <- log10(mean(abs(( 0.01*temp6 - temp5)/(1 - temp6) ) ) )


s <- slope
param<- c(pkapp, cinit)



cafit<-function(Btot, Ctot, calrelpot, param, nlc, slope)
{
	bvals<- 10^(-param[1]) +0.001*(nlc-Btot)
	pmg<- -log10(( -bvals + sqrt(bvals^2+0.004*10^(-param[1])*Btot))/2)
 	fitvals<-   slope*(  -log10(Ctot[1]*10^(-3)+10^param[2])+log10(10^(-pmg)+10^param[2]))
	fitvals
}


carss<-function(Btot, Ctot,param, relpot, calrelpot, nlc, slope){
	rss<- sum((relpot-cafit(Btot, Ctot, calrelpot, param, nlc, slope))^2)
	rss
}

oldslope<- 0.0

while(abs(slope-oldslope)>= eps)
{

caopt<-nlminb(start=param, objective=carss,  Btot=Btot, Ctot=Ctot, lower= c(0, -Inf), upper=c(Inf, 0), relpot=relpot, calrelpot=calrelpot, slope=slope, nlc=nlc)

C <- caopt$par[2]
pca<-    - (log10(Ctot) -3)
temp9<- -log10(0.001*Ctot[1] + 10^C) + log10(10^(-pca) + 10^C)
oldslope<- slope
slope<- sum(temp9*temp2)/sum(temp9^2)
param<-caopt$par
}


pKapp <- caopt$par[1]
Kapp <- 10^(-pKapp)


temp1 <- Kapp + 0.001*(nlc - Btot)
temp2 <- sqrt( temp1*temp1 +0.004*Kapp*Btot)

pX <- -log10((-temp1+ temp2)/2)
X <- 10^(-pX)

conc <- data.frame(pX=pX, X=X)


C<- caopt$par[2]
temp<- - log10( 0.001*Ctot[1] + 10^C) + log10(10^(-pca) + 10^C)
 
   slope<-  sum(temp*calrelpot)/sum(temp*temp) 
 
inter<- - slope*log10(Ctot[1]*10^(-3) + 10^C)


rss <- caopt$objective
r <- sqrt( 1- rss/((nbuf-1)*var(relpot)))
parout<- c(inter, slope, 10^C, pKapp, Kapp, rss, r)

labels <- c("E0", "s", "Sigma", "pKapp", "Kapp", "RSS", "r")

outputs <- data.frame( labels = labels, parout = parout)

write.csv(conc, file="OUTbuf.csv", row.names=F)

write.csv(outputs, file="OUTpar.csv", row.names=F)


return(list(outputs, conc))
}




