# R program to implement LOME

lome <- function(Cal, Buf, Par){

Xtot <- c( Buf$XT)
Xmeas <-  10^(-c(Buf$pX))

NomLigConc <- Par[1,2]

Nsol <- length(Buf$XT)

CaM = 10^(-Buf$pX[Nsol])*1000

temp <- Buf$XT[Nsol] - CaM

LCinit <- NomLigConc

pKinit <- -log10(CaM*(NomLigConc-temp)/temp)

param <- c(LCinit, pKinit)

ObjFn <- function(param, Xtot, Xmeas){

		Xval <- 10^(-param[2]) + 0.001*(param[1] -Xtot)
		Xest <- 0.5*(-Xval +sqrt(Xval^2 + 0.004*Xtot*10^(-param[2])))
		
		sum(abs(Xmeas -Xest)*10^6)
}

Xopt <- nlminb(start=param, objective =ObjFn, lower=c(0,0), upper=c(NomLigConc, Inf), Xmeas=Xmeas, Xtot=Xtot)

LigConc <- Xopt$par[1]
pKapp <- Xopt$par[2]
Kapp <- 10^(-pKapp)

parout <- c(LigConc, 100*LigConc/NomLigConc, pKapp, Kapp)
labels <- c("LigConc", "Purity", "pKapp", "Kapp")
Xout <- data.frame(labels=labels, parout=parout)

temp1 <- Kapp + 0.001*(LigConc - Buf$XT)
temp2 <- sqrt( temp1*temp1 +0.004*Kapp*Buf$XT)

pX <- -log10((-temp1+ temp2)/2)
X <- 10^(-pX)

Xconc <- data.frame(pX=pX, X=X)

iflag <- Par[2,2]

if(iflag ==1){
pp <- seq(2, 8, 0.01)
ff <- 1/(1 + 10^(pp-pKapp))

plot(pp, ff, xlab="pX", ylab="Normalised fluorescence", xlim=c(8, 2), type="l")
points(Xconc$pX, 1/(1 + 10^(Xconc$pX-pKapp)), col= "brown1", pch=16)
points(Cal$pX, 1/(1+10^(Cal$pX-pKapp)), col= "blue", pch=16)
legend(5, 0.4, c("calibrating", "buffer"), col=c("blue", "brown1"), text.col="green4", pch=c(16,16))

pdf("OUTplotF.pdf", width=5, height=5)
plot(pp, ff, xlab="pX", ylab="Normalised fluorescence", xlim=c(8, 2), type="l")
points(Xconc$pX, 1/(1 + 10^(Xconc$pX-pKapp)), col= "brown1", pch=16)
points(Cal$pX, 1/(1+10^(Cal$pX-pKapp)), col= "blue", pch=16)
legend(5, 0.4, c("calibrating", "buffer"), col=c("blue", "brown1"), text.col="green4", pch=c(16,16))
dev.off()

write.csv(Xconc, file="OUTbufF.csv", row.names=F)

write.csv(Xout, file="OUTparF.csv", row.names=F)


}


if(iflag ==2){
Kr <- 7*10^6
Ktr <- 118

pp <- seq(2, 8, 0.01)
ll <- 3*log10( (1+Kr*10^(-pp))/(1+ Ktr +Kr*10^(-pp)))

plot(pp, ll, xlab="pX", ylab="Log10(L/Lmax)", xlim=c(8, 2), type="l")
points(Xconc$pX,3*log10( (1+Kr*10^(-Xconc$pX))/(1+ Ktr +Kr*10^(-Xconc$pX))) , col= "brown1", pch=16)
points(Cal$pX, 3*log10( (1+Kr*10^(-Cal$pX))/(1+ Ktr +Kr*10^(-Cal$pX))), col= "blue", pch=16)
legend(4.5, -4, c("calibrating", "buffer"), col=c("blue", "brown1"), text.col="green4", pch=c(16,16))

pdf("OUTplotA.pdf", width=5, height=5)
plot(pp, ll, xlab="pX", ylab="Log10(L/Lmax)", xlim=c(8, 2), type="l")
points(Xconc$pX,3*log10( (1+Kr*10^(-Xconc$pX))/(1+ Ktr +Kr*10^(-Xconc$pX))) , col= "brown1", pch=16)
points(Cal$pX, 3*log10( (1+Kr*10^(-Cal$pX))/(1+ Ktr +Kr*10^(-Cal$pX))), col= "blue", pch=16)
legend(4.5, -4, c("calibrating", "buffer"), col=c("blue", "brown1"), text.col="green4", pch=c(16,16))
dev.off()

write.csv(Xconc, file="OUTbufA.csv", row.names=F)

write.csv(Xout, file="OUTparA.csv", row.names=F)


}

return(list(Xout, Xconc))
}







