x_init <- numeric(2)
p1 <- (1-prob)/2 ; p2 = (1 +prob)/2
x_init[1] = qbeta( (1 -p1)*pbeta(a, m1, m2) + p1* pbeta(b, m1, m2), m1, m2 )
x_init[2] = qbeta( (1 -p2)*pbeta(a, m1, m2) + p2* pbeta(b, m1, m2), m1, m2 )
opt <- nleqslv(x_init, g, method ="Broyden", control=list(maxit=150), m1=m1, m2=m2, a=a, b=b, prob=prob)
print(opt$x)
if(opt$termcd ==1)  print("convergence achieved")
if(opt$termcd != 1) print("failed to converge")
temp =opt$x
# if (temp[1] <a || temp[2] < temp[1]){ temp[1] = a; temp[2] = qbeta( (1 -prob)*pbeta(a, m1, m2) + prob* pbeta(b, m1, m2), m1, m2 )}
# if (temp[2] >b){ temp[1] = qbeta( prob*pbeta(a, m1, m2) + (1-prob)* pbeta(b, m1, m2), m1, m2 ); temp[2] =b}
endpts = (temp -a)/(b-a)
return(endpts)
}
Tprev_hdpi <- function(m1, m2, a, b, prob){
if(m1 ==1){
endpts =c(a, qbeta( (1 -prob)*pbeta(a, m1, m2) + prob* pbeta(b, m1, m2), m1, m2 ) )
return((endpts -a)/(b-a))
}
if(m2 ==1){
endpts =c( qbeta( prob*pbeta(a, m1, m2) + (1- prob)* pbeta(b, m1, m2), m1, m2 ) , b)
return( (endpts-a)/(b-a))
}
mode = (m1-1)/(m1 + m2 -2)
if (mode <= a){
endpts = c(a, qbeta( (1 -prob)*pbeta(a, m1, m2) + prob* pbeta(b, m1, m2), m1, m2 )
return( (endpts -a)/(b-a) )  }
if (mode >= b){
endpts =c(qbeta( prob*pbeta(a, m1, m2) + (1-prob)* pbeta(b, m1, m2), m1, m2 ), b)
return( (endpts -a)/(b-a) ) }
g <- function(x, m1, m2, a, b, prob ){
y <- numeric(2)
y[1] =  pbeta(x[2], m1, m2) - pbeta(x[1], m1, m2) - prob*(pbeta(b, m1, m2) - pbeta(a, m1, m2))
# y[2] = log (dbeta(x[2], m1, m2)) - log(dbeta(x[1], m1, m2))
y[2] = dbeta(x[2], m1, m2) - dbeta(x[1], m1, m2)
return(y)
}
x_init <- numeric(2)
p1 <- (1-prob)/2 ; p2 = (1 +prob)/2
x_init[1] = qbeta( (1 -p1)*pbeta(a, m1, m2) + p1* pbeta(b, m1, m2), m1, m2 )
x_init[2] = qbeta( (1 -p2)*pbeta(a, m1, m2) + p2* pbeta(b, m1, m2), m1, m2 )
opt <- nleqslv(x_init, g, method ="Broyden", control=list(maxit=150), m1=m1, m2=m2, a=a, b=b, prob=prob)
print(opt$x)
if(opt$termcd ==1)  print("convergence achieved")
if(opt$termcd != 1) print("failed to converge")
temp =opt$x
# if (temp[1] <a || temp[2] < temp[1]){ temp[1] = a; temp[2] = qbeta( (1 -prob)*pbeta(a, m1, m2) + prob* pbeta(b, m1, m2), m1, m2 )}
# if (temp[2] >b){ temp[1] = qbeta( prob*pbeta(a, m1, m2) + (1-prob)* pbeta(b, m1, m2), m1, m2 ); temp[2] =b}
endpts = (temp -a)/(b-a)
return(endpts)
}
Tprev_hdpi <- function(m1, m2, a, b, prob){
if(m1 ==1){
endpts =c(a, qbeta( (1 -prob)*pbeta(a, m1, m2) + prob* pbeta(b, m1, m2), m1, m2 ) )
return((endpts -a)/(b-a))
}
if(m2 ==1){
endpts =c( qbeta( prob*pbeta(a, m1, m2) + (1- prob)* pbeta(b, m1, m2), m1, m2 ) , b)
return( (endpts-a)/(b-a))
}
mode = (m1-1)/(m1 + m2 -2)
if (mode <= a){
endpts =c(a, qbeta( (1 -prob)*pbeta(a, m1, m2) + prob* pbeta(b, m1, m2), m1, m2 ) )
return((endpts -a)/(b-a))
}
if (mode >= b){
endpts =c( qbeta( prob*pbeta(a, m1, m2) + (1- prob)* pbeta(b, m1, m2), m1, m2 ) , b)
return( (endpts-a)/(b-a))
}
g <- function(x, m1, m2, a, b, prob ){
y <- numeric(2)
y[1] =  pbeta(x[2], m1, m2) - pbeta(x[1], m1, m2) - prob*(pbeta(b, m1, m2) - pbeta(a, m1, m2))
# y[2] = log (dbeta(x[2], m1, m2)) - log(dbeta(x[1], m1, m2))
y[2] = dbeta(x[2], m1, m2) - dbeta(x[1], m1, m2)
return(y)
}
x_init <- numeric(2)
p1 <- (1-prob)/2 ; p2 = (1 +prob)/2
x_init[1] = qbeta( (1 -p1)*pbeta(a, m1, m2) + p1* pbeta(b, m1, m2), m1, m2 )
x_init[2] = qbeta( (1 -p2)*pbeta(a, m1, m2) + p2* pbeta(b, m1, m2), m1, m2 )
opt <- nleqslv(x_init, g, method ="Broyden", control=list(maxit=150), m1=m1, m2=m2, a=a, b=b, prob=prob)
print(opt$x)
if(opt$termcd ==1)  print("convergence achieved")
if(opt$termcd != 1) print("failed to converge")
temp =opt$x
# if (temp[1] <a || temp[2] < temp[1]){ temp[1] = a; temp[2] = qbeta( (1 -prob)*pbeta(a, m1, m2) + prob* pbeta(b, m1, m2), m1, m2 )}
# if (temp[2] >b){ temp[1] = qbeta( prob*pbeta(a, m1, m2) + (1-prob)* pbeta(b, m1, m2), m1, m2 ); temp[2] =b}
endpts = (temp -a)/(b-a)
return(endpts)
}
k=1; n=20; a=0.05; b=1; prob=0.96
m1 = k+1; m2= n-k+1
inter = Tprev_hdpi(m1, m2, a, b, prob)
print(inter)
k=1; n=30; a=0.05; b=1; prob=0.96
m1 = k+1; m2= n-k+1
inter = Tprev_hdpi(m1, m2, a, b, prob)
print(inter)
k=29; n=30; a=0.05; b=1; prob=0.96
m1 = k+1; m2= n-k+1
inter = Tprev_hdpi(m1, m2, a, b, prob)
print(inter)
library(nleqslv)
k=29; n=30; a=0.05; b=1; prob=0.96
m1 = k+1; m2= n-k+1
inter = Tprev_hdpi(m1, m2, a, b, prob)
print(inter)
n=20; a=0.05; b=1; g=0.25; prob=0.96; theta = a +(b-a)*g
len=numeric(n+1)
for(k in 0:n){
m1 = k+1; m2= n-k+1
inter = Tprev_hdpi(m1, m2, a, b, prob)
print(inter)
len[k+1] <- inter[2] - inter[1]
}
n=9; a=0.05; b=1; g=0.25; prob=0.96; theta = a +(b-a)*g
len=numeric(n+1)
for(k in 0:n){
m1 = k+1; m2= n-k+1
inter = Tprev_hdpi(m1, m2, a, b, prob)
print(inter)
len[k+1] <- inter[2] - inter[1]
}
Tprev_hdpi <- function(m1, m2, a, b, prob){
if(m1 ==1){
endpts =c(a, qbeta( (1 -prob)*pbeta(a, m1, m2) + prob* pbeta(b, m1, m2), m1, m2 ) )
return((endpts -a)/(b-a))
}
if(m2 ==1){
endpts =c( qbeta( prob*pbeta(a, m1, m2) + (1- prob)* pbeta(b, m1, m2), m1, m2 ) , b)
return( (endpts-a)/(b-a))
}
mode = (m1-1)/(m1 + m2 -2)
if (mode <= a){
endpts =c(a, qbeta( (1 -prob)*pbeta(a, m1, m2) + prob* pbeta(b, m1, m2), m1, m2 ) )
return((endpts -a)/(b-a))
}
if (mode >= b){
endpts =c( qbeta( prob*pbeta(a, m1, m2) + (1- prob)* pbeta(b, m1, m2), m1, m2 ) , b)
return( (endpts-a)/(b-a))
}
g <- function(x, m1, m2, a, b, prob ){
y <- numeric(2)
y[1] =  pbeta(x[2], m1, m2) - pbeta(x[1], m1, m2) - prob*(pbeta(b, m1, m2) - pbeta(a, m1, m2))
# y[2] = log (dbeta(x[2], m1, m2)) - log(dbeta(x[1], m1, m2))
y[2] = dbeta(x[2], m1, m2) - dbeta(x[1], m1, m2)
return(y)
}
x_init <- numeric(2)
p1 <- (1-prob)/2 ; p2 = (1 +prob)/2
x_init[1] = qbeta( (1 -p1)*pbeta(a, m1, m2) + p1* pbeta(b, m1, m2), m1, m2 )
x_init[2] = qbeta( (1 -p2)*pbeta(a, m1, m2) + p2* pbeta(b, m1, m2), m1, m2 )
opt <- nleqslv(x_init, g, method ="Broyden", control=list(maxit=150), m1=m1, m2=m2, a=a, b=b, prob=prob)
print(opt$x)
if(opt$termcd ==1)  print("convergence achieved")
if(opt$termcd != 1) print("failed to converge")
temp =opt$x
if (temp[1] <a || temp[2] < temp[1]){ temp[1] = a; temp[2] = qbeta( (1 -prob)*pbeta(a, m1, m2) + prob* pbeta(b, m1, m2), m1, m2 )}
if (temp[2] >b){ temp[1] = qbeta( prob*pbeta(a, m1, m2) + (1-prob)* pbeta(b, m1, m2), m1, m2 ); temp[2] =b}
endpts = (temp -a)/(b-a)
return(endpts)
}
n=9; a=0.05; b=1; g=0.25; prob=0.96; theta = a +(b-a)*g
len=numeric(n+1)
for(k in 0:n){
m1 = k+1; m2= n-k+1
inter = Tprev_hdpi(m1, m2, a, b, prob)
print(inter)
len[k+1] <- inter[2] - inter[1]
}
n=20; a=0.05; b=1; g=0.25; prob=0.96; theta = a +(b-a)*g
len=numeric(n+1)
for(k in 0:n){
m1 = k+1; m2= n-k+1
inter = Tprev_hdpi(m1, m2, a, b, prob)
print(inter)
len[k+1] <- inter[2] - inter[1]
}
n=50; a=0.05; b=1; g=0.25; prob=0.96; theta = a +(b-a)*g
len=numeric(n+1)
for(k in 0:n){
m1 = k+1; m2= n-k+1
inter = Tprev_hdpi(m1, m2, a, b, prob)
print(inter)
len[k+1] <- inter[2] - inter[1]
}
k =3; n=50; m1=k+1; m2=n-k+1; a=0.05; b=1
CDF<-function(x){
(pbeta(x, m1, m2)-pbeta(a, m1, m2))/(pbeta(b, m1, m2)-pbeta(a, m1, m2))
}
PDF<-function(x){
dbeta(x, m1, m2)/(pbeta(b, m1, m2)-pbeta(a, m1, m2))
}
bvals =seq(0.05,1,0.001)
plot(bvals, PDF(bvals), type="l")
k =2; n=50; m1=k+1; m2=n-k+1; a=0.05; b=1
CDF<-function(x){
(pbeta(x, m1, m2)-pbeta(a, m1, m2))/(pbeta(b, m1, m2)-pbeta(a, m1, m2))
}
PDF<-function(x){
dbeta(x, m1, m2)/(pbeta(b, m1, m2)-pbeta(a, m1, m2))
}
bvals =seq(0.05,1,0.001)
plot(bvals, PDF(bvals), type="l")
height= 0.01
k =4; n=50; m1=k+1; m2=n-k+1; a=0.05; b=1
CDF<-function(x){
(pbeta(x, m1, m2)-pbeta(a, m1, m2))/(pbeta(b, m1, m2)-pbeta(a, m1, m2))
}
PDF<-function(x){
dbeta(x, m1, m2)/(pbeta(b, m1, m2)-pbeta(a, m1, m2))
}
bvals =seq(0.05,1,0.001)
plot(bvals, PDF(bvals), type="l")
k =5; n=50; m1=k+1; m2=n-k+1; a=0.05; b=1
CDF<-function(x){
(pbeta(x, m1, m2)-pbeta(a, m1, m2))/(pbeta(b, m1, m2)-pbeta(a, m1, m2))
}
PDF<-function(x){
dbeta(x, m1, m2)/(pbeta(b, m1, m2)-pbeta(a, m1, m2))
}
bvals =seq(0.05,1,0.001)
plot(bvals, PDF(bvals), type="l")
k =5; n=200; m1=k+1; m2=n-k+1; a=0.05; b=1
CDF<-function(x){
(pbeta(x, m1, m2)-pbeta(a, m1, m2))/(pbeta(b, m1, m2)-pbeta(a, m1, m2))
}
PDF<-function(x){
dbeta(x, m1, m2)/(pbeta(b, m1, m2)-pbeta(a, m1, m2))
}
bvals =seq(0.05,1,0.001)
plot(bvals, PDF(bvals), type="l")
k =10; n=200; m1=k+1; m2=n-k+1; a=0.05; b=1
CDF<-function(x){
(pbeta(x, m1, m2)-pbeta(a, m1, m2))/(pbeta(b, m1, m2)-pbeta(a, m1, m2))
}
PDF<-function(x){
dbeta(x, m1, m2)/(pbeta(b, m1, m2)-pbeta(a, m1, m2))
}
bvals =seq(0.05,1,0.001)
plot(bvals, PDF(bvals), type="l")
k =11; n=200; m1=k+1; m2=n-k+1; a=0.05; b=1
CDF<-function(x){
(pbeta(x, m1, m2)-pbeta(a, m1, m2))/(pbeta(b, m1, m2)-pbeta(a, m1, m2))
}
PDF<-function(x){
dbeta(x, m1, m2)/(pbeta(b, m1, m2)-pbeta(a, m1, m2))
}
bvals =seq(0.05,1,0.001)
plot(bvals, PDF(bvals), type="l")
setwd("~/Desktop/CaLOME")
source("LOME.txt")
cacal1 <- read.csv(file.choose(), header=T)
cabuf1 <- read.csv(file.choose(), header=T)
capar1 <- read.csv(file.choose(), header=T)
caout1 <- lome(cacal1, cabuf1, capar1)
#  Print the outputs. The outputs and a plot have been saved to
#  your working directory that was set above.
caout1
source("LOME.txt")
caout1 <- lome(cacal1, cabuf1, capar1)
#  Print the outputs. The outputs and a plot have been saved to
#  your working directory that was set above.
caout1
source("LOME.txt")
caout1 <- lome(cacal1, cabuf1, capar1)
#  Print the outputs. The outputs and a plot have been saved to
#  your working directory that was set above.
caout1
